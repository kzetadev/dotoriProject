<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="board_comment">

	<!-- 게시글 상세보기 하단 댓글 목록 -->
	<select id="selectDetail" resultType="com.board.vo.Board_CommentVo">
		SELECT bc.comment_no, bc.board_ref, bc.board_level, bc.board_step, m.mem_no
				, m.mem_nickname, bc.board_no, bc.comment_content
				, to_char(bc.comment_date, 'YYYY-MM-DD HH:MI:SS') comment_date
				, bc.comment_del
		FROM board_comment bc, board_post bp, member_info m
		WHERE bc.board_no = bp.board_no 
			AND m.mem_no = bc.mem_no
			AND bc.board_no = #{bc.board_no}
		ORDER BY board_ref, board_level, board_step
	</select>

	<!-- 마이페이지에서 회원id가 #{mem_id}인 사람이 쓴 댓글들 보기 -->
  <select id="selectAll" resultType="com.board.vo.Board_CommentVo">
    select * from board_comment where mem_no = 
    	(select mem_no from member_info where mem_id = #{mem_id})
  </select>
  
  	<!-- 댓글번호가 x번인 사람이 올린 게시글에 올린 댓글(들) (부정확) -->
  <select id="selectOne" resultType="com.board.vo.Board_CommentVo">
  	  	select * from board_comment where comment_no = #{comment_no}
  </select>
  
  	<!-- x번 회원이 x번 게시물에 대한 댓글을 달음 (부정확) -->
  <insert id="insert">
  	insert into board_comment(comment_no, mem_no, board_no, comment_content, comment_date
  	, comment_secret, board_ref, board_level, board_step)
  	values(#{comment_no}, #{mem_no}, #{board_no}, #{comment_content}, sysdate
  	, #{comment_secret}, #{board_ref}, #{board_level}
  	, (select nvl(max(board_step), 0) + 1 from 
  		board_comment where board_no = #{board_no} and board_ref = #{board_ref}))
  </insert>
	<!-- 글에 작성할 다음 댓글 번호 가져오기 -->  
  <select id="selectNextCommentNo" resultType="java.lang.Integer">
  	select nvl(max(comment_no), 0) + 1 as comment_no from board_comment where board_no = #{board_no}
  </select>

	<!-- x번 회원이 x번 게시글에 쓴 댓글을 수정 (첨부파일 수정은 고려 안함) -->
  <update id="update">
	update board_comment set comment_content = #{comment_content}, comment_secret = #{comment_secret} 
	where comment_no = #{comment_no} and board_no = #{board_no} 
  </update>
  
  	<!-- 댓글번호가 x인 (x번 회원이 x번 게시글에 쓴) 댓글을 삭제 (첨부파일 삭제는 고려 안함) -->
  	<!-- 삭제된 댓글임을 표시하기 위해 delete문이 아닌 update문으로 논리삭제 시킴 -->
  	<!-- comment_del - 0 : 삭제되지 않음	1 : 삭제됨 -->
  <update id="delete">
	update board_comment set comment_del = 1
	where comment_no = #{comment_no} and board_no = #{board_no}
  </update>
</mapper>