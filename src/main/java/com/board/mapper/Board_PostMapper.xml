<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="board_post">
 
	<!-- 게시글 목록 
	<select id="select" resultType="com.board.vo.Board_PostVo">
		SELECT b.board_no, b.board_kinds, h.head_tag_name, b.board_title, 
		m.mem_nickname, b.board_date, b.board_hit 
		FROM board_post b, member_info m, head_tag h
		WHERE b.mem_no = m.mem_no and b.head_tag_no = h.head_tag_no   
		order by b.board_no desc
	</select> -->
  <!-- 게시글 목록 -->   
    <select id="select" resultType="com.board.vo.Board_PostListVo">
      select
       *
       from (
         select 
            a.*,
            rownum AS rnum,
            count(*) over() AS totcnt
            from (
               select b.board_no
                    , h.head_tag_name
                    , b.board_title
                    , b.BOARD_CONTENT
                    , m.mem_no
                    , m.mem_nickname
                    , b.board_kinds
                    , to_char(b.board_date, 'YYYY/MM/DD') AS board_date
                    , b.board_hit
               from board_post b, member_info m, head_tag h
               where b.mem_no = m.mem_no and b.head_tag_no = h.head_tag_no  
              
               
               
            <if test="str1 == 1"> <!-- 전체 -->   
               <if test="str2 != null and str2 != ''"> <!-- 검색조건 -->
                    AND (b.board_title LIKE '%'||#{str2,jdbcType=VARCHAR}||'%' OR b.BOARD_PLAIN_CONTENT LIKE '%'||#{str2,jdbcType=VARCHAR}||'%')
                 </if> 
            </if>   
            
            <if test="str1 == 2"> <!-- 제목 -->
               <if test="str2 != null and str2 != ''"> <!-- 검색조건 -->
                  and b.board_title LIKE '%'||#{str2,jdbcType=VARCHAR}||'%'
               </if>
            </if>   


            <if test="str1 == 3"> <!-- 제목 -->
               <if test="str2 != null and str2 != ''"> <!-- 검색조건 -->
                  and b.BOARD_PLAIN_CONTENT LIKE '%'||#{str2,jdbcType=VARCHAR}||'%'
               </if>
            </if>   
            
            
               <if test="str5 != null and str5 != ''"> <!-- 검색조건 -->
                  and b.board_kinds LIKE '%'||#{str5,jdbcType=VARCHAR}||'%'
               </if>            
                order by board_no desc
               
            )A
            
            order by board_no DESC
          ) 
          
          
          <![CDATA[ where rnum > #{str3,jdbcType=VARCHAR} and rnum <= #{str4,jdbcType=VARCHAR}]]>
          
   </select> 
   
	<!-- 게시글 등록 -->
	<!-- CREATE SEQUENCE seq_board_no INCREMENT BY 1 START WITH 1 MINVALUE 1; -->
	<insert id="insert">
		insert into board_post(board_no, mem_no, board_kinds, board_title, board_date
			, board_hit, board_content, board_copy, head_tag_no, board_plain_content) 
		values(seq_board_no.nextval, #{mem_no}, #{board_kinds}, #{board_title}, sysdate
			, 0, #{board_content}, #{board_copy}, #{head_tag_no}, #{board_plain_content})
	</insert>

	<!-- 게시글 상세 -->
	<select id="detail" resultType="com.board.vo.Board_PostVo">
		SELECT b.board_no, b.mem_no, mi.mem_nickname, h.head_tag_name, b.board_kinds, b.board_title, to_char(b.board_date, 'YYYY-MM-DD HH:MI:SS') board_date, b.board_hit
		    , b.board_content, b.board_copy
		  FROM board_post b, member_info mi, head_tag h
		 WHERE b.mem_no = mi.mem_no
		       AND b.head_tag_no = h.head_tag_no
		       AND b.board_no = #{board_no}
	</select>

	<!-- 게시글 수정 -->
	<update id="update">
		update board_post set board_title=#{board_title}, board_content=#{board_content}
			, board_copy=#{board_copy}, board_update_date=sysdate, board_plain_content = #{board_plain_content}
		where board_no=#{board_no}
	</update>

	<!-- 게시글 삭제 -->
	<delete id="delete">
		delete from board_post where board_no=#{board_no}
	</delete>
	
	<!-- 게시글 조회수 증가 -->
	<update id="updateHit">
		update board_post set board_hit = board_hit + 1 where board_no = #{board_no}
	</update>
	
	<!-- 말머리 목록 -->
	<select id="selectHead_Tag" resultType="com.board.vo.Head_TagVo">
		select * from head_tag order by head_tag_no
	</select>
	<!-- 게시판 구분에 따른 말머리 목록 -->
	<select id="selectHead_TagByBoard_Kinds" resultType="com.board.vo.Head_TagVo">
		select * from head_tag where board_kinds = #{board_kinds}
	</select>
	<!-- 게시판 메인1. 최신글 -->
	<select id="selectMain1" resultType="com.board.vo.Board_PostVo">
		SELECT board_content
		FROM (SELECT *
			FROM board_post
			ORDER BY board_date DESC)
		<![CDATA[ WHERE ROWNUM <= 5 ]]>
	</select>
	
	<!-- 게시판 메인2. 인기글 -->
	<select id="selectMain2" resultType="com.board.vo.Board_PostVo">
		SELECT board_content
		FROM (SELECT *
			FROM board_post
			ORDER BY board_hit DESC
		)
		<![CDATA[ WHERE ROWNUM <= 5 ]]>
	</select>
	
	<!-- 게시판 메인3. 후기 -->
	<select id="selectMain3" resultType="com.board.vo.Board_PostVo">
		SELECT board_content
		FROM (
			SELECT
			ROW_NUMBER() OVER (ORDER BY a.board_date DESC) AS NUM,
			a.board_content
			FROM board_post a
			WHERE board_kinds=2
			ORDER BY board_date DESC
			)
		<![CDATA[ WHERE ROWNUM <= 5 ]]>
	</select>
	
	<!-- 게시판 메인4. 동행 -->
	<select id="selectMain4" resultType="com.board.vo.Board_PostVo">
		SELECT board_content
		FROM (
			SELECT
			ROW_NUMBER() OVER (ORDER BY a.board_date DESC) AS NUM,
			a.board_content
			FROM board_post a
			WHERE board_kinds=3
			ORDER BY board_date DESC
			)
		<![CDATA[ WHERE ROWNUM <= 5 ]]>
	</select>
	<!-- 갤러리. 이미지가 포함된 게시판 종류 조회 -->
	<select id="galleryBoardkinds" resultType="java.util.Map">
		select board_kinds "board_kinds"
		    , case board_kinds
		        when 1 then '자유게시판'
		        when 2 then '후기'
		        when 3 then '동행'
		      end "board_kinds_str"
		  from board_post
		 where instr(board_content, 'data:image') > 0
		 order by board_kinds
	</select>
	<!-- 각 게시판별 총 레코드 카운트 조회 -->
	<select id="galleryBoardRecordCount" resultType="java.lang.Integer">
		select count(board_no)
		  from board_post
		 where instr(board_content, 'data:image') > 0
		 		and board_kinds = #{board_kinds}
	</select>
	<!-- 갤러리. 게시판 별 글 제목, 대표 이미지 조회 -->
	<select id="galleryBoardImage" resultType="com.board.vo.Board_PostVo">
		select r, board_no, board_title, board_content
		  from (select rownum r, board_no, board_title, board_content
				  from (select board_no, board_title
				            , substr(board_content, instr(board_content, 'data:image')
				                , instr(substr(board_content, instr(board_content, 'data:image')), '"')) board_content 
				          from board_post
				         where board_kinds = #{board_kinds}
				              and instr(board_content, 'data:image') > 0
				         order by board_no desc
				       )
				)
		 where r between #{start_idx} and #{end_idx}
	</select>
</mapper>